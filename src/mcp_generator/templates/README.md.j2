# {{ config.server.name }}

{{ config.server.description if config.server.description else "MCP Server for " + config.server.base_url }}

Auto-generated by mcp-generator

## Description

This MCP server provides tools to interact with the API at `{{ config.server.base_url }}`.

## Available Tools

{% for tool in config.tools %}
### {{ tool.name }}

**Description:** {{ tool.description }}

**Endpoint:** `{{ tool.method.value }} {{ tool.endpoint }}`

**Parameters:**
{% if tool.parameters %}
{% for param in tool.parameters %}
- `{{ param.name }}` ({{ param.type.value }}, {{ param.location.value }}){% if param.required %} **[Required]**{% endif %} - {{ param.description if param.description else "No description" }}
{% endfor %}
{% else %}
No parameters
{% endif %}

{% endfor %}

## Installation

1. Install dependencies:

```bash
pip install -r requirements.txt
```

{% if config.server.authentication %}
2. Set up authentication:

{% if config.server.authentication.type == "bearer" %}
Set the `API_AUTH_TOKEN` environment variable with your bearer token:

```bash
export API_AUTH_TOKEN="your-token-here"
```
{% elif config.server.authentication.type == "apikey" %}
Set the `API_AUTH_TOKEN` environment variable with your API key:

```bash
export API_AUTH_TOKEN="your-api-key-here"
```
{% endif %}
{% endif %}

## Usage

### Running the Server

```bash
python server.py
```

### Configuration with Claude Desktop

Add this to your Claude Desktop configuration (`claude_desktop_config.json`):

```json
{
  "mcpServers": {
    "{{ config.server.name }}": {
      "command": "python",
      "args": ["path/to/server.py"]{% if config.server.authentication %},
      "env": {
        "API_AUTH_TOKEN": "your-token-here"
      }{% endif %}
    }
  }
}
```

## Development

This server was generated using [mcp-generator](https://github.com/yourusername/mcp-generator).

To modify the server, edit the configuration file and regenerate using:

```bash
mcp-gen generate config.yaml -o output_directory
```

## License

MIT License
